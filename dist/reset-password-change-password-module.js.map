{"version":3,"sources":["webpack:///./src/app/reset-password/change-password.component.ts","webpack:///./src/app/reset-password/change-password.module.ts","webpack:///./src/app/reset-password/change-password.routing.ts"],"names":[],"mappings":"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","file":"reset-password-change-password-module.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpService} from \"../services/http-service\";\nimport {Config} from \"../../config\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs/Subscription\";\nimport {Headers, Response, Http} from '@angular/http';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-change-password',\n  template: `\n      <preloader-full></preloader-full>\n\n      <div class=\"page-center\">\n          <div class=\"page-center-in\">\n              <div class=\"container-fluid\">\n                  <form class=\"sign-box reset-password-box\">\n                      <!--<div class=\"sign-avatar\">\n                          <img src=\"img/avatar-sign.png\" alt=\"\">\n                      </div>-->\n                      <header class=\"sign-title\">New Password</header>\n                      <div class=\"form-group\">\n                          <input type=\"password\" class=\"form-control\" name = \"pass1\" placeholder=\"New Password\" [(ngModel)] = \"pass1\"/>\n                      </div>\n                      <div class=\"form-group\">\n                          <input type=\"password\" class=\"form-control\" name = \"pass2\" placeholder=\"Confirm New Password\" [(ngModel)] = \"pass2\"/>\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-rounded btn-block\" (click)=\"reset_pass()\">Submit</button>\n                  </form>\n              </div>\n          </div>\n      </div>\n  `,\n  styles: []\n})\nexport class ChangePasswordComponent implements OnInit , OnDestroy{\n    private sub: Subscription;\n    loaded = false;\n    private token:string;\n    pass1:string;\n    pass2:string;\n  constructor(private http: HttpService   , private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n      this.sub = this.route.params.subscribe(params => {\n          this.token = params['token']; // (+) converts string 'id' to a number\n          // alert(params['query']);\n          let headers = new Headers();\n          headers.append('Content-Type', 'application/json');\n\n          this.http.post(Config.api + '/api-token-verify/', JSON.stringify({\n                  \"token\":this.token\n              }),\n              {headers: headers}).map((response: Response) => response.json()).subscribe(\n              data => {\n                    this.loaded = true;\n              },\n              error => {\n\n                  this.router.navigate(['/page-not-found']);\n              });\n\n          // In a real app: dispatch action to load the details here.\n      });\n  }\n    ngOnDestroy() {\n        // localStorage.removeItem('navigated_list');\n        this.sub.unsubscribe();\n\n    }\n\n    reset_pass(){\n        if (!this.pass1){\n            Swal.fire(\n                'Password is required',\n                '',\n                'error'\n            )\n        }\n        else if (this.pass1!==this.pass2) {\n            Swal.fire(\n                'Password not same',\n                '',\n                'error'\n            )\n        }\n            else{\n\n            // alert(params['query']);\n            let headers = new Headers({'Authorization': 'JWT ' + this.token});\n            headers.append('Content-Type', 'application/json');\n\n            this.http.post(Config.api + '/new_password/', JSON.stringify({\n                    \"password\":this.pass1\n                }),\n                {headers: headers}).map((response: Response) => response.json()).subscribe(\n                data => {\n                    Swal.fire(\n                        'Password changed successfully',\n                        '',\n                        'success'\n                    ).then(() => {this.router.navigate(['/login']);});\n                },\n                error => {\n\n                    Swal.fire(\n                        'Server error',\n                        '',\n                        'error'\n                    )\n                });\n            }\n\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport {FormsModule} from \"@angular/forms\";\nimport {ChangePasswordComponent} from \"./change-password.component\";\nimport {ChangePasswordRoutes} from \"./change-password.routing\";\nimport {PreloaderModule} from \"../components/preloader.module\";\n\n\n@NgModule({\n    imports: [CommonModule, RouterModule.forChild(ChangePasswordRoutes),FormsModule,PreloaderModule],\n    declarations: [ChangePasswordComponent]\n})\n\nexport class ChangePasswordModule { }\n","import { Routes } from '@angular/router';\nimport {ChangePasswordComponent} from \"./change-password.component\";\n\nexport const ChangePasswordRoutes: Routes = [{\n    path: '',\n    component: ChangePasswordComponent,\n    data: {\n        heading: '',\n    }\n}];\n"],"sourceRoot":""}